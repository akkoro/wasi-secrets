interface keys {
    record key {
        id: string
    }

    /// Return a handle to a key identified by `id`
    new-key: func(id: string) -> key
}

/// Provides interface to a secrets store
interface secrets {
    use self.keys.{key}

    record secret {
        id: string,
        value: option<string>,
    }

    /// Return a handle to a secret identified by `id`
    new-secret: func(id: string) -> secret

    /// Return the secret value associated with the handle
    get-secret-value: func(handle: secret) -> result<secret, error>

    /// Set the secret value associated with the handle
    set-secret-value: func(handle: secret, value: string, key: key) -> result<secret, error>

    enum error {
        success,
        invalid-argument,
        forbidden
    }
}

default world wasi-secrets {
    import secrets: self.secrets
}
